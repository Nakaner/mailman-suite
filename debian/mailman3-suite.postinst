#!/bin/sh

set -e

. /usr/share/debconf/confmodule
. /usr/share/dbconfig-common/dpkg/postinst

# Set permissions for sqlite3 file
dbc_dbfile_owner="www-data:www-data"
dbc_dbfile_perms="0640"

dbc_go mailman3-suite "$@"

pathfind() {
    OLDIFS="$IFS"
    IFS=:
    for p in $PATH; do
        if [ -x "$p/$*" ]; then
            IFS="$OLDIFS"
            return 0
        fi
    done
    IFS="$OLDIFS"
    return 1
}

if [ -e /usr/share/apache2/apache2-maintscript-helper ]; then
    . /usr/share/apache2/apache2-maintscript-helper

    apache_install() {
        if [ -d /etc/apache2/conf-available ] && [ ! -e /etc/apache2/conf-available/mailman3.conf ]; then
            ln -s /etc/mailman3/apache.conf /etc/apache2/conf-available/mailman3.conf
        fi
        # Enable proxy_uwsgi module
        if [ -f /etc/apache2/mods-available/proxy_uwsgi.load ]; then
            apache2_invoke enmod proxy_uwsgi
        fi
        # Enable the configuration
        apache2_invoke enconf mailman3.conf
    }
else
    apache_install() {
        return 1
    }
fi

settings_local_new=
hyperkitty_cfg_new=

cleanup () {
    [ "$settings_local_new" ] && rm -f "$settings_local_new"
    [ "$hyperkitty_cfg_new" ] && rm -f "$hyperkitty_cfg_new"
}

# All seds are using a vertical pipe "|" as a delimiter because of
# the potential presence of a slash "/" into some variables, as those
# filled with a base64 -w0. We thought about using a number sign "#",
# but sometimes the delimiter follows a variable sign "$", and "$#"
# might be interpreted by the shell.
create_config () {
    trap cleanup EXIT
    settings_local_new=`tempfile -m 0644`
    cp -a /usr/share/mailman3-suite/settings_local.py.sample $settings_local_new
    hyperkitty_cfg_new=`tempfile -m 0644`
    cp -a /usr/share/mailman3-suite/hyperkitty.cfg.sample $hyperkitty_cfg_new
    
    # get database settings from dbconfig-common
    if [ -f /etc/dbconfig-common/mailman3-suite.conf ]; then
        . /etc/dbconfig-common/mailman3-suite.conf

        # Comment out default database settings if dbconfig is used
        sed -i -e "s|^\(\s\+\)\('ENGINE':\)|\1#\2|" \
                $settings_local_new

        sed -i -e "s|^\(\s\+'NAME':\s*'\)\S\+\(',\s*\)|\1$dbc_dbname\2|" \
               -e "s|^\(\s\+'USER':\s*'\)\S\+\(',\s*\)|\1$dbc_dbuser\2|" \
               -e "s|^\(\s\+'PASSWORD':\s*'\)\S\+\(',\s*\)|\1$dbc_dbpass\2|" \
               -e "s|^\(\s\+'HOST':\s*'\)\S*\(',\s*\)|\1$dbc_dbserver\2|" \
                $settings_local_new
    fi

    case "$dbc_dbtype" in
        pgsql)
            sed -i -e "s|^\(\s\+\)#\?\s*\('ENGINE': 'django.db.backends.postgresql_psycopg2',\s*\)$|\1\2|" \
                    $settings_local_new
            ;;
        mysql)
            sed -i -e "s|^\(\s\+\)#\?\s*\('ENGINE': 'django.db.backends.mysql',\s*\)$|\1\2|" \
                   -e "s|^\(\s\+\)#\?\s*\('init_command': \"SET sql_mode=.*\",\s*\)$|\1\2|" \
                    $settings_local_new
            ;;
        sqlite3)
            sed -i -e "s|^\(\s\+\)#\?\s*\('ENGINE': 'django.db.backends.sqlite3',\s*\)$|\1\2|" \
                   -e "s|^\(\s\+'NAME':\s*'\)\S\+\(',\s*\)|\1$dbc_basepath/$dbc_dbname.db\2|" \
                    $settings_local_new
            ;;
        "")
            ;;
        *)
            echo "Unsupported database type $dbc_type."
            exit 1
            ;;
    esac

    # Get SECRET_KEY from mailman3-suite.py if existent
    [ -f /etc/mailman3/mailman3-suite.py ] && {
        secretkey="$(sed -ne "s/^SECRET_KEY = '\(\S\+\)'$/\1/p" \
            /etc/mailman3/mailman3-suite.py)"
    }
    # If this is the default key, forget it!
    [ "$secretkey" = "change-this-on-your-production-server" ] && unset secretkey
    # Generate a new one
    while [ -z "$secretkey" ]; do
        secretkey="$(dd if=/dev/urandom bs=1 count=200 2>/dev/null \
            | base64 -w0 | sed -ne 's|\(.\{48\}\).*|\1|p')"
    done

    # Get MAILMAN_REST_API_PASS from mailman3-suite.py if existent
    [ -f /etc/mailman3/mailman3-suite.py ] && {
        restapipass="$(sed -ne "s|^MAILMAN_REST_API_PASS = '\(\S\+\)'$|\1|p" \
            /etc/mailman3/mailman3-suite.py)"
    }
    # If this is the default key, forget it!
    [ "$restapipass" = "restpass" ] && unset restapipass
    # Set a new one
    if [ -z "$archiverkey" ]; then
        [ -f /etc/mailman3/mailman.cfg ] && {
            restapipass="$(sed -ne 's|^\s*admin_pass:\s*||p' \
                /etc/mailman3/mailman.cfg)"
        }
    fi

    # Get MAILMAN_ARCHIVER_KEY from mailman3-suite.py if existent
    [ -f /etc/mailman3/mailman3-suite.py ] && {
        archiverkey="$(sed -ne "s|^MAILMAN_ARCHIVER_KEY = '\(\S\+\)'$|\1|p" \
            /etc/mailman3/mailman3-suite.py)"
    }
    # If this is the default key, forget it!
    [ "$archiverkey" = "SecretArchiverAPIKey" ] && unset archiverkey
    # Generate a new one
    while [ -z "$archiverkey" ]; do
        archiverkey="$(dd if=/dev/urandom bs=1 count=200 2>/dev/null \
            | base64 -w0 | sed -ne 's|\(.\{32\}\).*|\1|p')"
    done

    db_get mailman3-suite/emailname
    emailname="$RET"

    # Set custom settings in settings_local.py
    sed -i -e "s|^\(\s*SECRET_KEY\s*=\s*'\)\S\+\('\s*\)$|\1$secretkey\2|" \
           -e "s|^\(\s*MAILMAN_REST_API_PASS\s*=\s*'\)\S\+\('\s*\)|\1$restapipass\2|" \
           -e "s|^\(\s*MAILMAN_ARCHIVER_KEY\s*=\s*'\)\S\+\('\s*\)|\1$archiverkey\2|" \
           -e "s|^\(\s*EMAILNAME\s*=\s*'\)\S\+\('\s*\)|\1$emailname\2|" \
           $settings_local_new

    # Set custom settings in hyperkitty.cfg
    sed -i -e "s|\(api_key:\s*\)\S\+\(\s*\)$|\1$archiverkey\2|" \
           $hyperkitty_cfg_new

    # Register new config file
    ucf --three-way --debconf-ok "$settings_local_new" /etc/mailman3/mailman3-suite.py
    ucf --three-way --debconf-ok "$hyperkitty_cfg_new" /etc/mailman3/hyperkitty.cfg
    ucfr mailman3-suite /etc/mailman3/mailman3-suite.py
    ucfr mailman3-suite /etc/mailman3/hyperkitty.cfg
    chmod 0640 /etc/mailman3/mailman3-suite.py /etc/mailman3/hyperkitty.cfg
    chown root:list     /etc/mailman3/hyperkitty.cfg
    chown root:www-data /etc/mailman3/mailman3-suite.py
    rm -f $settings_local_new $hyperkitty_cfg_new
}

create_logfiles () {
    for logfile in /var/log/mailman3/mailman-suite.log /var/log/mailman3/mailman-suite-uwsgi.log; do
        if [ ! -f "$logfile" ]; then
            touch $logfile
            chown www-data:www-data $logfile
            chmod 0640 $logfile
	fi
    done
}

django_admin_args="--verbosity 0 --no-color --pythonpath /usr/share/mailman3-suite --settings settings"

init_django () {
    if pathfind django-admin; then
        update_django
        django-admin loaddata $django_admin_args first_start
    fi
}

update_django () {
    if pathfind django-admin; then
        django-admin migrate        --no-input $django_admin_args
        django-admin collectstatic  --no-input $django_admin_args
    fi
}

create_superuser () {
    db_get mailman3-suite/superuser-name
    su_name="$RET"
    db_get mailman3-suite/superuser-mail
    su_mail="$RET"
    db_get mailman3-suite/superuser-password
    su_password="$RET"

    if [ -n "$su_name" ] && [ -n "$su_mail" ] && [ -n "$su_password" ]; then
        /usr/share/mailman3-suite/manage.py shell -c \
            "from django.contrib.auth.models import User; \
             User.objects.filter(email='$su_mail').delete(); \
             User.objects.create_superuser('$su_name', \
             '$su_mail', '$su_password')"
    fi
}

case "$1" in
    configure)

        create_config
        create_logfiles

        if [ -n "$2" ]; then
            init_django
        else
            update_django
        fi

        create_superuser

        # Handle webserver configuration/restart
        db_get mailman3-suite/configure-webserver
        webservers="$RET"
        restart=""

        for webserver in $webservers; do
            webserver=${webserver%,}
            case "$webserver" in
                apache2)
                    apache_install
                    ;;
            esac
            pathfind $webserver || continue
            restart="$restart $webserver"
        done

        db_get mailman3-suite/restart-webserver
        res="$RET"
        if [ "$res" = "true" ]; then
            for webserver in $restart; do
                webserver=${webserver%,}
                # Redirection of 3 is needed because Debconf uses it and it might
                # be inherited by webserver. See bug #446324.
                if pathfind invoke-rc.d; then
                    invoke-rc.d $webserver reload 3>/dev/null || true
                else
                    /etc/init.d/$webserver reload 3>/dev/null || true
                fi
            done
        fi

        db_stop
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

#DEBHELPER#

exit 0
